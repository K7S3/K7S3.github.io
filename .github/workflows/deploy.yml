name: Deploy to GitHub Pages with Gemini API

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Inject API Key
      run: |
        echo "üîë Injecting Gemini API Key..."
        
        # Check if secret exists
        if [ -z "${{ secrets.GEMINI_API_KEY }}" ]; then
          echo "‚ùå GEMINI_API_KEY secret not found"
          echo "üìù Creating fallback configuration..."
          echo '<script>window.GEMINI_API_KEY = null; console.log("‚ö†Ô∏è API key not configured - using fallback");</script>' > api-injection.html
        else
          echo "‚úÖ GEMINI_API_KEY secret found"
          echo "üîç API key starts with: $(echo '${{ secrets.GEMINI_API_KEY }}' | cut -c1-6)"
          echo '<script>window.GEMINI_API_KEY = "${{ secrets.GEMINI_API_KEY }}"; console.log("‚úÖ Gemini API key loaded successfully");</script>' > api-injection.html
        fi
        
        # Insert the API key script before gemini-config-dev.js
        sed -i '/<script src="gemini-config-dev.js"><\/script>/i\    <script>window.GEMINI_API_KEY = "${{ secrets.GEMINI_API_KEY }}"; console.log("‚úÖ Gemini API key injected by GitHub Actions");</script>' index.html
        
        # Verify injection
        echo "üîç Verifying injection..."
        if grep -q "window.GEMINI_API_KEY.*AIza" index.html; then
          echo "‚úÖ API key successfully injected"
        else
          echo "‚ö†Ô∏è API key injection may have failed"
        fi

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 