name: Deploy to GitHub Pages with Gemini API

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Inject Gemini API Key
      run: |
        # Read API key from secrets and inject it into the application
        API_KEY="${{ secrets.GEMINI_API_KEY }}"
        
        if [ -n "$API_KEY" ]; then
          echo "🔑 Injecting Gemini API key..."
          
          # Create gemini-config.js with the API key
          echo "window.GEMINI_API_KEY = '$API_KEY';" > gemini-config.js
          echo "console.log('🚀 Gemini API key loaded from GitHub Actions');" >> gemini-config.js
          
          # Replace placeholder in gemini-config-dev.js
          sed -i "s/YOUR_GEMINI_API_KEY_HERE/$API_KEY/g" gemini-config-dev.js
          
          echo "✅ API key injection completed successfully"
        else
          echo "⚠️  No API key found - chatbot will use fallback responses"
          
          # Create fallback gemini-config.js
          echo "window.GEMINI_API_KEY = null;" > gemini-config.js
          echo "console.log('⚠️  No API key available - using fallback responses');" >> gemini-config.js
        fi

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 